# -*- coding: utf-8 -*-

###
### This file is generated automatically by SALOME v8.2.0 with dump python functionality
###

import sys
import salome

salome.salome_init()
theStudy = salome.myStudy

import salome_notebook
notebook = salome_notebook.NoteBook(theStudy)
sys.path.insert( 0, r'/home/zeeburg/Documents/CIMEC/Cursos/FEM/pract/guia4/ej4/codeAster/mallas/projection')

###
### GEOM component
###

import GEOM
from salome.geom import geomBuilder
import math
import SALOMEDS


geompy = geomBuilder.New(theStudy)

O = geompy.MakeVertex(0, 0, 0)
OX = geompy.MakeVectorDXDYDZ(1, 0, 0)
OY = geompy.MakeVectorDXDYDZ(0, 1, 0)
OZ = geompy.MakeVectorDXDYDZ(0, 0, 1)
Vertex_1 = geompy.MakeVertex(0, 0, 0)
Vertex_2 = geompy.MakeVertex(8, 0, 0)
Vertex_3 = geompy.MakeVertex(8, 29, 0)
Vertex_4 = geompy.MakeVertex(37, 29, 0)
Vertex_5 = geompy.MakeVertex(37, 37, 0)
Vertex_6 = geompy.MakeVertex(0, 37, 0)
Line_1 = geompy.MakeLineTwoPnt(Vertex_6, Vertex_1)
Line_1_vertex_2 = geompy.GetSubShape(Line_1, [2])
Line_2 = geompy.MakeLineTwoPnt(Vertex_5, Line_1_vertex_2)
Projection_1 = geompy.MakeProjection(Vertex_3, Line_2)
Projection_2 = geompy.MakeProjection(Vertex_3, Line_1)
Line_3 = geompy.MakeLineTwoPnt(Vertex_6, Projection_2)
Line_4 = geompy.MakeLineTwoPnt(Vertex_5, Vertex_4)
Line_3_vertex_2 = geompy.GetSubShape(Line_3, [2])
Line_5 = geompy.MakeLineTwoPnt(Line_3_vertex_2, Projection_1)
Line_6 = geompy.MakeLineTwoPnt(Vertex_1, Vertex_2)
Line_6_vertex_2 = geompy.GetSubShape(Line_6, [2])
Line_3_vertex_3 = geompy.GetSubShape(Line_3, [3])
Line_7 = geompy.MakeLineTwoPnt(Line_6_vertex_2, Line_3_vertex_3)
Line_6_vertex_3 = geompy.GetSubShape(Line_6, [3])
Line_8 = geompy.MakeLineTwoPnt(Line_6_vertex_3, Vertex_3)
Line_4_vertex_2 = geompy.GetSubShape(Line_4, [2])
Line_5_vertex_3 = geompy.GetSubShape(Line_5, [3])
Line_9 = geompy.MakeLineTwoPnt(Line_4_vertex_2, Line_5_vertex_3)
Line_4_vertex_3 = geompy.GetSubShape(Line_4, [3])
Line_8_vertex_3 = geompy.GetSubShape(Line_8, [3])
Line_10 = geompy.MakeLineTwoPnt(Line_4_vertex_3, Line_8_vertex_3)
Face_1 = geompy.MakeFaceWires([Line_3, Line_4, Line_5, Line_6, Line_7, Line_8, Line_9, Line_10], 1)
[Edge_1,Edge_2,Edge_3,Edge_4,Edge_5,Edge_6,Edge_7,Edge_8] = geompy.ExtractShapes(Face_1, geompy.ShapeType["EDGE"], True)
[Vertex_7,Vertex_8,Vertex_9,Vertex_10,Vertex_11,Vertex_12,Vertex_13,Vertex_14] = geompy.ExtractShapes(Face_1, geompy.ShapeType["VERTEX"], True)
listSubShapeIDs = geompy.SubShapeAllIDs(Face_1, geompy.ShapeType["VERTEX"])
listSubShapeIDs = geompy.SubShapeAllIDs(Face_1, geompy.ShapeType["VERTEX"])
listSubShapeIDs = geompy.SubShapeAllIDs(Face_1, geompy.ShapeType["EDGE"])
listSubShapeIDs = geompy.SubShapeAllIDs(Face_1, geompy.ShapeType["EDGE"])
listSubShapeIDs = geompy.SubShapeAllIDs(Face_1, geompy.ShapeType["EDGE"])
listSubShapeIDs = geompy.SubShapeAllIDs(Face_1, geompy.ShapeType["EDGE"])
listSubShapeIDs = geompy.SubShapeAllIDs(Face_1, geompy.ShapeType["EDGE"])
listSubShapeIDs = geompy.SubShapeAllIDs(Face_1, geompy.ShapeType["EDGE"])
listSubShapeIDs = geompy.SubShapeAllIDs(Face_1, geompy.ShapeType["EDGE"])
listSubShapeIDs = geompy.SubShapeAllIDs(Face_1, geompy.ShapeType["EDGE"])
listSubShapeIDs = geompy.SubShapeAllIDs(Face_1, geompy.ShapeType["EDGE"])
listSubShapeIDs = geompy.SubShapeAllIDs(Face_1, geompy.ShapeType["VERTEX"])
listSubShapeIDs = geompy.SubShapeAllIDs(Face_1, geompy.ShapeType["VERTEX"])
listSubShapeIDs = geompy.SubShapeAllIDs(Face_1, geompy.ShapeType["EDGE"])
listSubShapeIDs = geompy.SubShapeAllIDs(Face_1, geompy.ShapeType["EDGE"])
listSubShapeIDs = geompy.SubShapeAllIDs(Face_1, geompy.ShapeType["EDGE"])
listSubShapeIDs = geompy.SubShapeAllIDs(Face_1, geompy.ShapeType["EDGE"])
listSubShapeIDs = geompy.SubShapeAllIDs(Face_1, geompy.ShapeType["EDGE"])
listSubShapeIDs = geompy.SubShapeAllIDs(Face_1, geompy.ShapeType["EDGE"])
listSubShapeIDs = geompy.SubShapeAllIDs(Face_1, geompy.ShapeType["EDGE"])
listSubShapeIDs = geompy.SubShapeAllIDs(Face_1, geompy.ShapeType["EDGE"])
listSubShapeIDs = geompy.SubShapeAllIDs(Face_1, geompy.ShapeType["EDGE"])
listSubShapeIDs = geompy.SubShapeAllIDs(Face_1, geompy.ShapeType["EDGE"])
listSubShapeIDs = geompy.SubShapeAllIDs(Face_1, geompy.ShapeType["EDGE"])
listSubShapeIDs = geompy.SubShapeAllIDs(Face_1, geompy.ShapeType["EDGE"])
listSubShapeIDs = geompy.SubShapeAllIDs(Face_1, geompy.ShapeType["EDGE"])
listSubShapeIDs = geompy.SubShapeAllIDs(Face_1, geompy.ShapeType["EDGE"])
listSubShapeIDs = geompy.SubShapeAllIDs(Face_1, geompy.ShapeType["EDGE"])
listSubShapeIDs = geompy.SubShapeAllIDs(Face_1, geompy.ShapeType["EDGE"])
listSubShapeIDs = geompy.SubShapeAllIDs(Face_1, geompy.ShapeType["EDGE"])
listSubShapeIDs = geompy.SubShapeAllIDs(Face_1, geompy.ShapeType["EDGE"])
listSubShapeIDs = geompy.SubShapeAllIDs(Face_1, geompy.ShapeType["EDGE"])
listSubShapeIDs = geompy.SubShapeAllIDs(Face_1, geompy.ShapeType["VERTEX"])
listSubShapeIDs = geompy.SubShapeAllIDs(Face_1, geompy.ShapeType["VERTEX"])
listSubShapeIDs = geompy.SubShapeAllIDs(Face_1, geompy.ShapeType["EDGE"])
listSubShapeIDs = geompy.SubShapeAllIDs(Face_1, geompy.ShapeType["EDGE"])
listSubShapeIDs = geompy.SubShapeAllIDs(Face_1, geompy.ShapeType["EDGE"])
listSubShapeIDs = geompy.SubShapeAllIDs(Face_1, geompy.ShapeType["EDGE"])
listSubShapeIDs = geompy.SubShapeAllIDs(Face_1, geompy.ShapeType["EDGE"])
listSubShapeIDs = geompy.SubShapeAllIDs(Face_1, geompy.ShapeType["EDGE"])
listSubShapeIDs = geompy.SubShapeAllIDs(Face_1, geompy.ShapeType["EDGE"])
listSubShapeIDs = geompy.SubShapeAllIDs(Face_1, geompy.ShapeType["EDGE"])
listSubShapeIDs = geompy.SubShapeAllIDs(Face_1, geompy.ShapeType["EDGE"])
listSubShapeIDs = geompy.SubShapeAllIDs(Face_1, geompy.ShapeType["EDGE"])
listSubShapeIDs = geompy.SubShapeAllIDs(Face_1, geompy.ShapeType["EDGE"])
listSubShapeIDs = geompy.SubShapeAllIDs(Face_1, geompy.ShapeType["EDGE"])
listSubShapeIDs = geompy.SubShapeAllIDs(Vertex_13, geompy.ShapeType["VERTEX"])
listSubShapeIDs = geompy.SubShapeAllIDs(Vertex_13, geompy.ShapeType["VERTEX"])
listSubShapeIDs = geompy.SubShapeAllIDs(Vertex_13, geompy.ShapeType["VERTEX"])
listSubShapeIDs = geompy.SubShapeAllIDs(Vertex_13, geompy.ShapeType["VERTEX"])
listSubShapeIDs = geompy.SubShapeAllIDs(Vertex_13, geompy.ShapeType["VERTEX"])
listSubShapeIDs = geompy.SubShapeAllIDs(Vertex_13, geompy.ShapeType["VERTEX"])
listSubShapeIDs = geompy.SubShapeAllIDs(Vertex_13, geompy.ShapeType["VERTEX"])
listSubShapeIDs = geompy.SubShapeAllIDs(Vertex_13, geompy.ShapeType["VERTEX"])
listSubShapeIDs = geompy.SubShapeAllIDs(Vertex_13, geompy.ShapeType["VERTEX"])
carga = geompy.CreateGroup(Vertex_13, geompy.ShapeType["VERTEX"])
geompy.UnionIDs(carga, [1])
largo_X = geompy.CreateGroup(Face_1, geompy.ShapeType["EDGE"])
geompy.UnionIDs(largo_X, [12, 16])
largo_Y = geompy.CreateGroup(Face_1, geompy.ShapeType["EDGE"])
geompy.UnionIDs(largo_Y, [6, 10])
fijacion = geompy.CreateGroup(Face_1, geompy.ShapeType["EDGE"])
geompy.UnionIDs(fijacion, [8, 18])
carga_1 = geompy.CreateGroup(Face_1, geompy.ShapeType["EDGE"])
geompy.UnionIDs(carga_1, [3, 14])
geompy.addToStudy( O, 'O' )
geompy.addToStudy( OX, 'OX' )
geompy.addToStudy( OY, 'OY' )
geompy.addToStudy( OZ, 'OZ' )
geompy.addToStudy( Vertex_1, 'Vertex_1' )
geompy.addToStudy( Vertex_2, 'Vertex_2' )
geompy.addToStudy( Vertex_3, 'Vertex_3' )
geompy.addToStudy( Vertex_4, 'Vertex_4' )
geompy.addToStudy( Vertex_5, 'Vertex_5' )
geompy.addToStudy( Vertex_6, 'Vertex_6' )
geompy.addToStudy( Line_1, 'Line_1' )
geompy.addToStudyInFather( Line_1, Line_1_vertex_2, 'Line_1:vertex_2' )
geompy.addToStudy( Line_2, 'Line_2' )
geompy.addToStudy( Projection_1, 'Projection_1' )
geompy.addToStudy( Projection_2, 'Projection_2' )
geompy.addToStudy( Line_3, 'Line_3' )
geompy.addToStudy( Line_4, 'Line_4' )
geompy.addToStudyInFather( Line_3, Line_3_vertex_2, 'Line_3:vertex_2' )
geompy.addToStudy( Line_5, 'Line_5' )
geompy.addToStudy( Line_6, 'Line_6' )
geompy.addToStudyInFather( Line_6, Line_6_vertex_2, 'Line_6:vertex_2' )
geompy.addToStudyInFather( Line_3, Line_3_vertex_3, 'Line_3:vertex_3' )
geompy.addToStudy( Line_7, 'Line_7' )
geompy.addToStudyInFather( Line_6, Line_6_vertex_3, 'Line_6:vertex_3' )
geompy.addToStudy( Line_8, 'Line_8' )
geompy.addToStudyInFather( Line_4, Line_4_vertex_2, 'Line_4:vertex_2' )
geompy.addToStudyInFather( Line_5, Line_5_vertex_3, 'Line_5:vertex_3' )
geompy.addToStudy( Line_9, 'Line_9' )
geompy.addToStudyInFather( Line_4, Line_4_vertex_3, 'Line_4:vertex_3' )
geompy.addToStudyInFather( Line_8, Line_8_vertex_3, 'Line_8:vertex_3' )
geompy.addToStudy( Line_10, 'Line_10' )
geompy.addToStudy( Face_1, 'Face_1' )
geompy.addToStudyInFather( Face_1, Edge_1, 'Edge_1' )
geompy.addToStudyInFather( Face_1, Edge_2, 'Edge_2' )
geompy.addToStudyInFather( Face_1, Edge_3, 'Edge_3' )
geompy.addToStudyInFather( Face_1, Edge_4, 'Edge_4' )
geompy.addToStudyInFather( Face_1, Edge_5, 'Edge_5' )
geompy.addToStudyInFather( Face_1, Edge_6, 'Edge_6' )
geompy.addToStudyInFather( Face_1, Edge_7, 'Edge_7' )
geompy.addToStudyInFather( Face_1, Edge_8, 'Edge_8' )
geompy.addToStudyInFather( Face_1, Vertex_7, 'Vertex_7' )
geompy.addToStudyInFather( Face_1, Vertex_8, 'Vertex_8' )
geompy.addToStudyInFather( Face_1, Vertex_9, 'Vertex_9' )
geompy.addToStudyInFather( Face_1, Vertex_10, 'Vertex_10' )
geompy.addToStudyInFather( Face_1, Vertex_11, 'Vertex_11' )
geompy.addToStudyInFather( Face_1, Vertex_12, 'Vertex_12' )
geompy.addToStudyInFather( Face_1, Vertex_13, 'Vertex_13' )
geompy.addToStudyInFather( Face_1, Vertex_14, 'Vertex_14' )
geompy.addToStudyInFather( Vertex_13, carga, 'carga' )
geompy.addToStudyInFather( Face_1, largo_X, 'largo_X' )
geompy.addToStudyInFather( Face_1, largo_Y, 'largo_Y' )
geompy.addToStudyInFather( Face_1, fijacion, 'fijacion' )
geompy.addToStudyInFather( Face_1, carga_1, 'carga' )

###
### SMESH component
###

import  SMESH, SALOMEDS
from salome.smesh import smeshBuilder

from salome.StdMeshers import StdMeshersBuilder

smesh = smeshBuilder.New(theStudy)
Mesh_1 = smesh.Mesh(Face_1)
Quadrangle_2D = Mesh_1.Quadrangle(algo=smeshBuilder.QUADRANGLE)
Quadrangle_Parameters_1 = Quadrangle_2D.QuadrangleParameters(StdMeshersBuilder.QUAD_QUADRANGLE_PREF,-1,[],[])
largo_X_1 = Mesh_1.GroupOnGeom(largo_X,'largo_X',SMESH.EDGE)
largo_Y_1 = Mesh_1.GroupOnGeom(largo_Y,'largo_Y',SMESH.EDGE)
Regular_1D = Mesh_1.Segment(geom=largo_X)
largo_X_2 = Regular_1D.NumberOfSegments(15,1.3,[])
Regular_1D_1 = Mesh_1.Segment(geom=largo_Y)
largo_Y_2 = Regular_1D_1.NumberOfSegments(15,1.3,[])
Regular_1D_2 = Mesh_1.Segment(geom=fijacion)
carga_2 = Regular_1D_2.NumberOfSegments(15,1.3,[])
fijacion_1 = Mesh_1.GroupOnGeom(fijacion,'fijacion',SMESH.EDGE)
carga_3 = Mesh_1.GroupOnGeom(carga_1,'carga',SMESH.EDGE)
Sub_mesh_1 = Regular_1D.GetSubMesh()
Sub_mesh_2 = Regular_1D_1.GetSubMesh()
Sub_mesh_3 = Regular_1D_2.GetSubMesh()


## Set names of Mesh objects
smesh.SetName(Sub_mesh_2, 'Sub-mesh_2')
smesh.SetName(Sub_mesh_3, 'Sub-mesh_3')
smesh.SetName(Sub_mesh_1, 'Sub-mesh_1')
smesh.SetName(Quadrangle_2D.GetAlgorithm(), 'Quadrangle_2D')
smesh.SetName(Regular_1D.GetAlgorithm(), 'Regular_1D')
smesh.SetName(Mesh_1.GetMesh(), 'Mesh_1')
smesh.SetName(largo_X_1, 'largo_X')
smesh.SetName(largo_Y_1, 'largo_Y')
smesh.SetName(fijacion_1, 'fijacion')
smesh.SetName(carga_3, 'carga')
smesh.SetName(largo_Y_2, 'largo_Y')
smesh.SetName(largo_X_2, 'largo_X')
smesh.SetName(Quadrangle_Parameters_1, 'Quadrangle Parameters_1')
smesh.SetName(carga_2, 'carga')


if salome.sg.hasDesktop():
  salome.sg.updateObjBrowser(True)
